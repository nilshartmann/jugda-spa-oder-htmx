CREATE TABLE users (
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    fullname VARCHAR(255) NOT NULL
);

CREATE TABLE difficulty_levels (
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE UNIQUE INDEX difficulty_levels_name_unique ON difficulty_levels (LOWER(name));

CREATE TABLE category_types (
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE UNIQUE INDEX category_types_name_unique ON category_types (LOWER(name));

CREATE TABLE categories (
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_type_id BIGINT NOT NULL REFERENCES category_types (id),
    title            TEXT   NOT NULL,
    description      TEXT   NOT NULL
);

CREATE TABLE recipes (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id             BIGINT    NOT NULL REFERENCES users (id),
    created_at          TIMESTAMP NOT NULL,
    updated_at          TIMESTAMP NOT NULL,
    title               TEXT      NOT NULL,
    headline            TEXT      NOT NULL,
    preparation_time    INTEGER   NOT NULL,
    cook_time           INTEGER   NOT NULL,
    difficulty_level_id BIGINT    NOT NULL REFERENCES difficulty_levels (id),
    steps               TEXT      NOT NULL
);

CREATE TABLE recipe_categories (
    recipe_id   BIGINT NOT NULL REFERENCES recipes (id) ON DELETE CASCADE,
    category_id BIGINT NOT NULL REFERENCES categories (id),
    PRIMARY KEY (recipe_id, category_id)
);

CREATE TABLE ingredients (
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    recipe_id BIGINT  NOT NULL REFERENCES recipes (id) ON DELETE CASCADE,
    name      TEXT    NOT NULL,
    amount    REAL    NOT NULL,
    unit      TEXT    NOT NULL,
    order_no  INTEGER NOT NULL
);

CREATE TABLE feedbacks (
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP                               NOT NULL,
    commenter  TEXT                                    NOT NULL,
    rating     INT CHECK (rating >= 1 AND rating <= 5) NOT NULL,
    comment    TEXT                                    NOT NULL,
    recipe_id  BIGINT                                  NOT NULL REFERENCES recipes (id) ON DELETE CASCADE
);